pipeline {
    agent any
    environment {
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials'
        DOCKERHUB_USERNAME = 'iangacheru'
        CLIENT_IMAGE = 'client'
        SERVER_IMAGE = 'server'
        IMAGE_TAG = "1.1"
    }
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/GacheruIan/yolo.git', branch: 'master'
            }
        }
        stage('Build Client Docker Image') {
            steps {
                script {
                    dir('client') {
                        sh "docker build -t ${DOCKERHUB_USERNAME}/${CLIENT_IMAGE}:${IMAGE_TAG} ."
                    }
                }
            }
        }
        stage('Build Server Docker Image') {
            steps {
                script {
                    dir('backend') {
                        sh "docker build -t ${DOCKERHUB_USERNAME}/${SERVER_IMAGE}:${IMAGE_TAG} ."
                    }
                }
            }
        }
        stage('Login to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh "echo $PASSWORD | docker login -u $USERNAME --password-stdin"
                    }
                }
            }
        }
        stage('Push Client Docker Image') {
            steps {
                script {
                    sh "docker push ${DOCKERHUB_USERNAME}/${CLIENT_IMAGE}:${IMAGE_TAG}"
                }
            }
        }
        stage('Push Server Docker Image') {
            steps {
                script {
                    sh "docker push ${DOCKERHUB_USERNAME}/${SERVER_IMAGE}:${IMAGE_TAG}"
                }
            }
        }
        // Optional stage to build and run using Docker Compose
        stage('Build and Run with Docker Compose') {
            steps {
                script {
                    sh "docker-compose up --build -d"
                }
            }
        }
    }
    post {
        always {
            sh "docker rmi ${DOCKERHUB_USERNAME}/${CLIENT_IMAGE}:${IMAGE_TAG} || true"
            sh "docker rmi ${DOCKERHUB_USERNAME}/${SERVER_IMAGE}:${IMAGE_TAG} || true"
        }
    }
}
